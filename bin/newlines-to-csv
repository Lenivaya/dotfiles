#!/usr/bin/env python3
# vim: set ft=python:

import argparse
import os
import sys


def parse_args():
    parser = argparse.ArgumentParser(
        description="Convert newline-separated strings in a file to comma-separated.",
        epilog="Example: newlines-to-csv input.txt               # Outputs to input.txt.csv\n"
        "         newlines-to-csv input.txt output.csv    # Outputs to output.csv",
        formatter_class=argparse.RawTextHelpFormatter,
    )
    parser.add_argument(
        "input_file", help="The input file with newline-separated strings."
    )
    parser.add_argument(
        "output_file",
        nargs="?",
        default=None,
        help="The output file to save the comma-separated result. (default: {input_file}.csv)",
    )
    return parser.parse_args()


def convert_file(input_file, output_file=None):
    if not os.path.exists(input_file):
        print(f"Error: Input file '{input_file}' not found.", file=sys.stderr)
        sys.exit(1)

    if output_file is None:
        output_file = f"{input_file}.csv"

    try:
        with open(input_file, "r") as infile:
            lines = [line.strip() for line in infile if line.strip()]

        if not lines:
            print(
                f"Warning: Input file '{input_file}' is empty or contains only whitespace.",
                file=sys.stderr,
            )

        comma_separated = ",".join(lines)

        with open(output_file, "w") as outfile:
            outfile.write(comma_separated)

        print(f"Successfully converted '{input_file}' to '{output_file}'")

    except IOError as e:
        print(f"Error: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    args = parse_args()
    convert_file(args.input_file, args.output_file)
