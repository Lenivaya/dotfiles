# Backend
backend = "xrender";
# backend = "glx";
vsync = true;

# Opacity
# active-opacity = 1.0;
# inactive-opacity = 1.0;
# active-opacity = 1.0;
# inactive-opacity = 0.92;
# # blur-kern = "7x7box";
# # blur-strength = 320;
# blur-background-exclude = [
#       "window_type = 'dock'",
#       "window_type = 'desktop'",
#       "class_g = 'slop'"
# ];
# opacity-rules = [
#           "100:name *= 'i3lock'"
#           "100:class_g = 'Gimp'"
#           "100:class_g = 'Inkspace'"
#           "100:class_g = 'krita'"
#           "100:class_g = 'feh'"
#           "100:class_g = 'Thunderbird'"
#           "100:class_g = 'mpv'"
#           "100:class_g ?= 'slop'"
#           "100:class_g *= 'ffcast'"
#           "100:class_g = 'skippy-xd'"
#           "100:_NET_WM_STATE@:32a *= '_NET_WM_STATE_FULLSCREEN'"
#           "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
#           "96:_NET_WM_STATE@:32a *= '_NET_WM_STATE_STICKY'"
# ]
# inactive-dim = 0.3
# inactive-exclude = [
#   "window_type = 'dock'",
#   "window_type = 'desktop'",
# ];
#
# focus-exclude = [
#       "class_g = 'xob'",
#       "class_g = 'trayer'",
#       "class_g *= 'safeeyes'",
#       "class_g *= 'skippy-xd'",
#       "class_g ?= 'Steam'",
#       "class_g = 'slop'",
# ];


# Fading
# fading = false; # use animations instead
# no-fading-openclose = true
# no-fading-destroyed-argb = true
# fade-delta = 5;
# fade-in-step = 0.03;
# fade-out-step = 0.03;

# fade-exclude = [
#   "class_g = 'slop'",
#   "class_g = 'emacs'",
#   "class_g = 'Emacs'",
#   "class_g *= 'skippy-xd'"
# ]

# Shadow
shadow = true;
shadow-radius = 8;
shadow-offset-x = -3;
shadow-offset-y = -3;
shadow-opacity = 0.6;
shadow-exclude = [
      "name *= 'picom'",
      "class_g = 'slop'",
      "class_g *= 'ffcast'",
      "class_g = 'trayer'",
      "class_g ?= 'Notify-osd'",
      "class_g = 'Ulauncher'",
      "_GTK_FRAME_EXTENTS@:c",
      "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
      "window_type *= 'normal' && ! name ~= '' && ! class_g *= 'xmonad'"
];


# wintypes:
# {
#   normal = { fade = true; shadow = true; }
#   # tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
#   # # dock = { shadow = false; }
#   # dnd = { shadow = true; }
#   # popup_menu = { opacity = 0.8; }
#   # dropdown_menu = { opacity = 0.8; }
# };

use-damage = true;
# #
# # Unredirect all windows if a full-screen opaque window is detected, to
# # maximize performance for full-screen windows. Known to cause
# # flickering when redirecting/unredirecting windows.
# unredir-if-possible = true;

# # GLX backend: Avoid using stencil buffer, useful if you don't have a
# # stencil buffer. Might cause incorrect opacity when rendering
# # transparent content (but never practically happened) and may not work
# # with blur-background. My tests show a 15% performance boost.
# # Recommended.
glx-no-stencil = true;

# # # Use X Sync fence to sync clients' draw calls, to make sure all draw
# # # calls are finished before picom starts drawing. Needed on
# # # nvidia-drivers with GLX backend for some users.
xrender-sync-fence = true;

# # Other
mark-wmwin-focused = false;
mark-ovredir-focused = false;
use-ewmh-active-win = true;
detect-rounded-corners = true;
detect-client-opacity = true;
detect-transient = true;
detect-client-leader = true;

# log-level = "error";

# # https://github.com/yshui/picom/pull/1253#issuecomment-2117492905

# # slide in/out
# # animations = ({
# #     triggers = ["close", "hide"];
# #     offset-x = {
# #         timing = "0.2s cubic-bezier(0.21, 0.02, 0.76, 0.36)";
# #         start = "0";
# #         end = "-window-width";
# #     };
# #     shadow-offset-x = "offset-x";
# #     crop-x = "window-x";
# #     opacity = 1;
# #     blur-opacity = "opacity";
# #     shadow-opacity = "opacity";
# # },
# # {
# #     triggers = ["open", "show"];
# #     offset-x = {
# #         timing = "0.2s cubic-bezier(0.24, 0.64, 0.79, 0.98)";
# #         start = "-window-width";
# #         end = "0";
# #     };
# #     shadow-offset-x = "offset-x";
# #     crop-x = "window-x";
# # })

# # appear/disappear
# animations = ({
#     triggers = ["close", "hide"];
#     opacity = {
#         timing = "0.2s linear";
#         start = "window-raw-opacity-before";
#         end = "window-raw-opacity";
#     };
#     blur-opacity = "opacity";
#     shadow-opacity = "opacity";
#     offset-x = "(1 - scale-x) / 2 * window-width";
#     offset-y = "(1 - scale-y) / 2 * window-height";
#     scale-x = {
#         timing = "0.2s cubic-bezier(0.21, 0.02, 0.76, 0.36)";
#         start = 1;
#         end = 1.04;
#     };
#     scale-y = "scale-x";
#     shadow-scale-x = "scale-x";
#     shadow-scale-y = "scale-y";
#     shadow-offset-x = "offset-x";
#     shadow-offset-y = "offset-y";
# },
# {
#     triggers = ["open", "show"];
#     opacity = {
#         timing = "0.2s linear";
#         start = "window-raw-opacity-before";
#         end = "window-raw-opacity";
#     };
#     blur-opacity = "opacity";
#     shadow-opacity = "opacity";
#     offset-x = "(1 - scale-x) / 2 * window-width";
#     offset-y = "(1 - scale-y) / 2 * window-height";
#     scale-x = {
#         timing = "0.2s cubic-bezier(0.24, 0.64, 0.79, 0.98)";
#         start = 1.04;
#         end = 1;
#     };
#     scale-y = "scale-x";
#     shadow-scale-x = "scale-x";
#     shadow-scale-y = "scale-y";
#     shadow-offset-x = "offset-x";
#     shadow-offset-y = "offset-y";
# })
